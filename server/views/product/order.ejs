<!DOCTYPE html>
<html>

<head>
    <title>CS</title>
    <link rel='stylesheet' href='/stylesheets/default.css' />
    <link rel='stylesheet' href='/stylesheets/navstyle.css' />
    <script src='/javascripts/fabric_min.js'></script>
    <style>
        .contents {
            margin-top: 100px;
            display: block;
            position: relative;
            margin-left: auto;
            margin-right: auto;
            width: 1500px;
            height: 640px;
            margin-bottom: 50px;

        }

        .custom_cont {
            float: left;
            width: 1097px;
            height: 100%;

            border-right: none;
            position: relative;
        }

        .sale_cont {
            float: right;
            width: 400px;
            height: 100%;
            border: 1px solid black;
        }

        #c {
            position: absolute;
            border: 1px solid black;
        }

        .all_btn {
            position: absolute;
            width: 70px;
            height: 240px;
            z-index: 10;
            right: 25px;
            top: 30px;
        }

        .float_btn {
            position: relative;
            display: block;
            border-radius: 50%;
            background: white;
            height: 70px;
            width: 70px;
            margin-bottom: 10px;
            box-shadow: 0px 4px 8px 0 rgba(0, 0, 0, 0.2);
        }

        .float_btn a {
            position: absolute;
            width: 100%;
            text-align: center;
            line-height: 70px;
            display: block;
            cursor: pointer;
        }

        .float_btn label {
            position: absolute;
            width: 100%;
            text-align: center;
            line-height: 70px;
            display: block;
            cursor: pointer;
        }

        .add_picture {
            opacity: 0;
            width: 100%;
            position: absolute;
            line-height: 70px;
            z-index: 2;
        }


        .float_btn:hover {
            background-color: #FFC000;
        }

        .float_btn:hover a {
            color: white;
        }

        .float_btn:hover label {
            color: white;
        }


        #first {
            opacity: 1;
            visibility: visible;
            position: absolute;
        }

        #second {
            opacity: 0;
            visibility: none;
            position: absolute;
        }

        #third{
            opacity: 0;
            visibility: none;
            position: absolute;
        }
    </style>
</head>

<body>
    <%- include("../head/nav") %>
    <div class="contents">
        <div class="custom_cont" id="custom_cont">
            <div class="all_btn">
                <li>
                    <div class="float_btn">
                        <label for="select_pic">사진추가</label>
                        <input name="select_pic" type="file" class="add_picture" id="imgLoader"/>
                    </div>
                </li>
                <li>
                    <div class="float_btn">
                        <a for="add_text_btn" onclick="addText()">글자추가</a>
                    </div>
                </li>

                <li>
                    <div class="float_btn">
                        <a id="select_mode" for="add_text_btn" onclick="Selection_Mode()">선택하기</a>
                    </div>
                </li>

                <li>
                    <div class="float_btn">
                        <a class="remove_text_btn" onclick="delete_obj()">삭제</a>
                    </div>
                </li>
            </div>
            <canvas id="c" width="1097px" height="640px"></canvas>
        </div>


        <div class="sale_cont">
            <div id="first">
                <div class="order_pro">
                    <h3>주문하기</h3>
                    <hr>
                    <div>가격 : <sapn>1000</sapn>원</div>
                    <div>사이즈</div>
                    <button>주문하기</button>
                    <button>장바구니</button>
                </div>
            </div>

            <div id="second">
                <div class="option">
                    <strong>Option</strong>
                    <div class="block">
                        <label for="fontWeight" class="opt-title">TextStyle</label>
                        <input id="weight_con" class="style_con" type="range" name="fontWeight" min="100" max="900"
                            value="100" step="100" />
                    </div>
                    <div class="block">
                        <label for="mainColor" class="opt-title">Text Color</label>
                        <input id="fill" class="color_con" type="color" name="mainColor">
                    </div>
                    <div class="block">
                        <label for="opacitys" class="opt-title">Opacity</label>
                        <input id="opa_con" class="style_con" type="range" name="opacitys" min="0.1" max="1" 
                            step="0.1" />
                    </div>
                    <div>
                        <label for="bring" class="opt-title">정렬</label>
                        <button name="bring" id="send_back" onclick="send_back()">맨뒤로보내기</button>
                        <button name="bring" id="bring_front" onclick="bring_front()">맨앞으로보내기</button>
                        <button name="bring" id="send_to_back" onclick="send_to_back()">뒤로보내기</button>
                        <button name="bring" id="bring_to_front" onclick="bring_to_front()">앞으로보내기</button>
                    </div>
                </div>
            </div> 
            <div id="third">
                <div class="option">
                    <strong>Drwaing Option</strong>
                    <div class="block">
                        <label for="line_weight">굵기</label>
                        <input id="line_weight" type="range" name="line_weight" min="0" max="100" value="3"/>
                    </div>
                    <div class="block">
                        <label for="LineColor" class="opt-title">Text Color</label>
                        <input id="line_Color" class="color_con" type="color" name="LineColor" >
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

</html>
<script>
    
    var canvas = new fabric.Canvas('c');
    canvas.freeDrawingBrush.width = 3;
    function addText() {
        const canvCenter = canvas.getCenter();
        var textBox = new fabric.Textbox('텍스트', {
            font_size: 20,
            left: canvCenter.left,
            top: canvCenter.top,
            originX: 'center',
            originY: 'center',
            fill: '#FFC000'
        });
        canvas.add(textBox).setActiveObject(textBox);
    }

    document.getElementById('imgLoader').onchange = function handleImage(e) {
        const canvCenter = canvas.getCenter();
        var reader = new FileReader();
        reader.onload = function (event) { console.log('fdsf');
            var imgObj = new Image();
            imgObj.src = event.target.result;
            imgObj.onload = function () {
                // start fabricJS stuff
                
                var image = new fabric.Image(imgObj);
                image.set({
                    left: canvCenter.left,
                    top: canvCenter.top,
                    originX: 'center',
                    originY: 'center',
                })
                //image.scale(getRandomNum(0.1, 0.25)).setCoords();
                image.scaleToHeight(100);
                image.scaleToWidth(200);
                canvas.add(image);
                
                // end fabricJS stuff
            }
            
        }
        reader.readAsDataURL(e.target.files[0]);
    }

    function delete_obj() {
        var activeObject = canvas.getActiveObject();
        if(activeObject != null){
            if(confirm('정말로 삭제하시겠습니까?\n(삭제된 요소는 복구되지 않습니다.)')){
                if(activeObject._objects){
                    var objectsInGroup = activeObject.getObjects();
                    objectsInGroup.forEach(function(objects){
                        canvas.remove(objects);
                    })
                }else{
                    canvas.remove(activeObject);
                }
            }
        }
    }

    //드로잉 조작 부분
    document.getElementById("line_weight").onchange = function() {
        canvas.freeDrawingBrush.width = parseInt(this.value, 10) || 1;
    };


    document.getElementById("line_Color").onchange = function() {
    var brush = canvas.freeDrawingBrush;
        brush.color = this.value;
        if (brush.getPatternSrc) {
            brush.source = brush.getPatternSrc.call(brush);
        }
    };

    //여기까지 드로잉

    function Selection_Mode() {
        canvas.isDrawingMode = !canvas.isDrawingMode;
        console.log(canvas.freeDrawingBrush.width);
        if(canvas.isDrawingMode){
            document.getElementById("select_mode").innerHTML = '그리기';
            let aa = document.getElementById('first');
            let bb = document.getElementById('second');
            let cc= document.getElementById('third')
            aa.style.opacity = "0";
            aa.style.visibility = "none";
            bb.style.opacity = "0";
            bb.style.visibility = "none";
            bb.style.pointerEvents = "none";
            cc.style.opacity = "1";
            cc.style.visibility = "visible";
            cc.style.pointerEvents = "auto";

            
        }else{
            document.getElementById("select_mode").innerHTML = '선택하기';
            let aa = document.getElementById('first');
            let bb = document.getElementById('second');
            let cc= document.getElementById('third')
            aa.style.opacity = "1";
            aa.style.visibility = "visible";
            bb.style.opacity = "0";
            bb.style.visibility = "none";
            bb.style.pointerEvents = "none";
            cc.style.opacity = "0";
            cc.style.visibility = "none";
            cc.style.pointerEvents = "none";
        }
    }



    //텍스트 조작 부분  
    function fillText(property) {
        
        var activeObject = canvas.getActiveObject();
        document.getElementById(property).value = activeObject.fill;
        document.getElementById(property).oninput = function() {
            activeObject.set("fill", this.value);
            canvas.requestRenderAll();
        };
    }

    function opaText(property){
        var activeObject = canvas.getActiveObject();
        document.getElementById(property).value = activeObject.opacity;
        document.getElementById(property).oninput = function() {
        activeObject.set("opacity", this.value);
        canvas.requestRenderAll();
        };
    }

    function borderText(property) {
        var activeObject = canvas.getActiveObject();
        document.getElementById(property).value = activeObject.fontWeight;
        document.getElementById(property).oninput = function() {
            activeObject.set("fontWeight", this.value);
            canvas.requestRenderAll();
        };
    }

    //여기까지 텍스 조작 함수

    //맨뒤로 보내기
    function send_back(){
        var activeObject = canvas.getActiveObject();
        activeObject.sendToBack();
    }

    //맨 앞으로 가지고 오기
    function bring_front(){
        var activeObject = canvas.getActiveObject();
        activeObject.bringToFront();
    }

    //
    function bring_to_front(){
        var activeObject = canvas.getActiveObject();
        activeObject.bringForward();
    }

    function send_to_back(){
        var activeObject = canvas.getActiveObject();
        activeObject.sendBackwards();
    }

    canvas.on('mouse:down', function (e) {

        if (e.target && !canvas.isDrawingMode) {
            let temp = document.getElementById("select_mode");
            temp.style.pointerEvents = "none";
            if(e.target.type == 'textbox'){
                let aa = document.getElementById('first');
                let bb = document.getElementById('second');
                aa.style.opacity = "0";
                aa.style.visibility = "none";
                bb.style.opacity = "1";
                bb.style.visibility = "visible";
                bb.style.pointerEvents = "auto";
                fillText('fill');
                opaText('opa_con');
                borderText('weight_con');
            }
        }
        else {
            let temp = document.getElementById("select_mode");
            temp.style.pointerEvents = "auto";
            if(canvas.isDrawingMode){
                let aa = document.getElementById('first');
                let bb = document.getElementById('second');
                let cc= document.getElementById('third');
                aa.style.opacity = "0";
                aa.style.visibility = "none";
                bb.style.opacity = "0";
                bb.style.visibility = "none";
                bb.style.pointerEvents = "none";
                cc.style.opacity = "1";
                cc.style.visibility = "visible";
                cc.style.pointerEvents = "auto";
            }
            else{
                let aa = document.getElementById('first');
                let bb = document.getElementById('second');
                let cc= document.getElementById('third');
                aa.style.opacity = "1";
                aa.style.visibility = "visible";
                bb.style.opacity = "0";
                bb.style.visibility = "none";
                bb.style.pointerEvents = "none";
                cc.style.opacity = "0";
                cc.style.visibility = "none";
                cc.style.pointerEvents = "none";
            }
        }
    })


</script>